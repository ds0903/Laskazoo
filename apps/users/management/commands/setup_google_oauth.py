from django.core.management.base import BaseCommand
from allauth.socialaccount.models import SocialApp
from django.contrib.sites.models import Site
from django.conf import settings
import os


class Command(BaseCommand):
    help = '–ù–∞–ª–∞—à—Ç–æ–≤—É—î Google OAuth –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –±–µ–∑ –∞–¥–º—ñ–Ω–∫–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--domain',
            type=str,
            default='localhost:8000',
            help='–î–æ–º–µ–Ω –¥–ª—è Site (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: localhost:8000)',
        )

    def handle(self, *args, **kwargs):
        domain = kwargs['domain']
        client_id = os.getenv('GOOGLE_OAUTH_CLIENT_ID', '')
        client_secret = os.getenv('GOOGLE_OAUTH_CLIENT_SECRET', '')
        
        if not client_id or not client_secret:
            self.stdout.write(self.style.WARNING(
                'Google OAuth credentials –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ .env —Ñ–∞–π–ª—ñ.\n'
                '–î–æ–¥–∞–π—Ç–µ GOOGLE_OAUTH_CLIENT_ID —Ç–∞ GOOGLE_OAUTH_CLIENT_SECRET'
            ))
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–∞–π—Ç
        site, created = Site.objects.get_or_create(
            pk=1,
            defaults={'domain': domain, 'name': domain}
        )
        
        # –Ø–∫—â–æ —Å–∞–π—Ç —ñ—Å–Ω—É—î, –∞–ª–µ –¥–æ–º–µ–Ω —ñ–Ω—à–∏–π - –æ–Ω–æ–≤–ª—é—î–º–æ
        if not created and site.domain != domain:
            site.domain = domain
            site.name = domain
            site.save()
            self.stdout.write(self.style.SUCCESS(f'–û–Ω–æ–≤–ª–µ–Ω–æ —Å–∞–π—Ç: {site.domain}'))
        elif created:
            self.stdout.write(self.style.SUCCESS(f'–°—Ç–≤–æ—Ä–µ–Ω–æ —Å–∞–π—Ç: {site.domain}'))
        else:
            self.stdout.write(self.style.SUCCESS(f'–°–∞–π—Ç –≤–∂–µ —ñ—Å–Ω—É—î: {site.domain}'))
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ Google SocialApp
        social_app, created = SocialApp.objects.get_or_create(
            provider='google',
            defaults={
                'name': 'Google OAuth',
                'client_id': client_id,
                'secret': client_secret,
            }
        )
        
        # –û–Ω–æ–≤–ª—é—î–º–æ credentials —è–∫—â–æ –≤–æ–Ω–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—è
        if not created:
            updated = False
            if social_app.client_id != client_id:
                social_app.client_id = client_id
                updated = True
            if social_app.secret != client_secret:
                social_app.secret = client_secret
                updated = True
            if updated:
                social_app.save()
                self.stdout.write(self.style.SUCCESS('–û–Ω–æ–≤–ª–µ–Ω–æ Google OAuth credentials'))
        else:
            self.stdout.write(self.style.SUCCESS('–°—Ç–≤–æ—Ä–µ–Ω–æ Google OAuth –¥–æ–¥–∞—Ç–æ–∫'))
        
        # –î–æ–¥–∞—î–º–æ —Å–∞–π—Ç –¥–æ –¥–æ–¥–∞—Ç–∫—É
        if site not in social_app.sites.all():
            social_app.sites.add(site)
            self.stdout.write(self.style.SUCCESS(f'–î–æ–¥–∞–Ω–æ —Å–∞–π—Ç {site.domain} –¥–æ Google OAuth'))
        
        self.stdout.write(self.style.SUCCESS(
            '\n‚úÖ Google OAuth –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!\n'
            f'–î–æ–º–µ–Ω: {site.domain}\n'
            '–¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Google login –Ω–∞ —Å–∞–π—Ç—ñ.\n'
        ))
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –≤ Google Console
        if domain == 'localhost:8000':
            self.stdout.write(self.style.WARNING(
                'üìù –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —â–æ –≤ Google Console –¥–æ–¥–∞–Ω–æ Authorized redirect URIs:\n'
                '   - http://localhost:8000/accounts/google/login/callback/\n'
                '   - http://127.0.0.1:8000/accounts/google/login/callback/\n'
            ))
        else:
            self.stdout.write(self.style.WARNING(
                f'üìù –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —â–æ –≤ Google Console –¥–æ–¥–∞–Ω–æ Authorized redirect URI:\n'
                f'   - https://{domain}/accounts/google/login/callback/\n'
            ))
