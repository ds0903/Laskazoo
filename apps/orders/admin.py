from django.contrib import admin
from .models import Order, OrderItem, PaymentTransaction


class OrderItemInline(admin.TabularInline):
    model = OrderItem
    extra = 0
    fields = ('product', 'variant', 'quantity', 'retail_price', 'line_total')
    readonly_fields = ('line_total',)


class PaymentTransactionInline(admin.TabularInline):
    model = PaymentTransaction
    extra = 0
    fields = ('transaction_type', 'status', 'amount', 'payment_system', 'created_at')
    readonly_fields = ('transaction_type', 'status', 'amount', 'payment_system', 'created_at')
    can_delete = False
    max_num = 0  # –ù–µ –¥–æ–∑–≤–æ–ª—è—î–º–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –Ω–æ–≤—ñ


@admin.register(Order)
class OrderAdmin(admin.ModelAdmin):
    list_display = ('order_number', 'user', 'full_name', 'phone', 'status', 
                    'payment_method_display', 'payment_status_display', 
                    'total_amount', 'created_at', 'exported')
    list_filter = ('status', 'payment_method', 'payment_status', 'exported', 
                   'sale_type', 'delivery_condition', 'created_at')
    search_fields = ('order_number', 'full_name', 'phone', 'email', 'user__username')
    readonly_fields = ('order_number', 'total_amount', 'created_at', 'updated_at', 'exported_at')
    inlines = [OrderItemInline, PaymentTransactionInline]
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('user', 'status', 'order_number')
        }),
        ('–î–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞', {
            'fields': ('full_name', 'phone', 'email')
        }),
        ('–î–æ—Å—Ç–∞–≤–∫–∞', {
            'fields': ('sale_type', 'delivery_condition', 'delivery_address', 'comment')
        }),
        ('–û–ø–ª–∞—Ç–∞', {
            'fields': ('payment_method', 'payment_status', 'payment_id'),
            'classes': ('wide',)
        }),
        ('–ï–∫—Å–ø–æ—Ä—Ç', {
            'fields': ('exported', 'exported_at'),
            'classes': ('collapse',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('created_at', 'updated_at', 'total_amount'),
            'classes': ('collapse',)
        }),
    )
    
    actions = ['mark_as_processing', 'mark_as_shipped', 'mark_as_completed', 
               'mark_payment_as_paid', 'export_selected']
    
    def payment_method_display(self, obj):
        icons = {
            'cash': 'üíµ',
            'card_online': 'üí≥',
        }
        icon = icons.get(obj.payment_method, '‚ùì')
        return f"{icon} {obj.get_payment_method_display()}"
    payment_method_display.short_description = '–°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏'
    
    def payment_status_display(self, obj):
        status_colors = {
            'pending': 'üü°',
            'paid': 'üü¢',
            'failed': 'üî¥',
        }
        icon = status_colors.get(obj.payment_status, '‚ö™')
        status_text = {
            'pending': '–û—á—ñ–∫—É—î',
            'paid': '–û–ø–ª–∞—á–µ–Ω–æ',
            'failed': '–ù–µ –ø—Ä–æ–π—à–ª–∞',
        }.get(obj.payment_status, obj.payment_status)
        return f"{icon} {status_text}"
    payment_status_display.short_description = '–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç–∏'
    
    def mark_as_processing(self, request, queryset):
        updated = queryset.update(status=Order.STATUS_PROCESSING)
        self.message_user(request, f'{updated} –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ "–û–±—Ä–æ–±–ª—è—î—Ç—å—Å—è"')
    mark_as_processing.short_description = '–ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ "–û–±—Ä–æ–±–ª—è—î—Ç—å—Å—è"'
    
    def mark_as_shipped(self, request, queryset):
        updated = queryset.update(status=Order.STATUS_SHIPPED)
        self.message_user(request, f'{updated} –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ "–í –¥–æ—Ä–æ–∑—ñ"')
    mark_as_shipped.short_description = '–ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ "–í –¥–æ—Ä–æ–∑—ñ"'
    
    def mark_as_completed(self, request, queryset):
        updated = queryset.update(status=Order.STATUS_COMPLETED)
        self.message_user(request, f'{updated} –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ "–í–∏–∫–æ–Ω–∞–Ω–µ"')
    mark_as_completed.short_description = '–ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ "–í–∏–∫–æ–Ω–∞–Ω–µ"'
    
    def mark_payment_as_paid(self, request, queryset):
        updated = queryset.filter(payment_method='card_online').update(payment_status='paid')
        self.message_user(request, f'{updated} –æ–ø–ª–∞—Ç –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ "–û–ø–ª–∞—á–µ–Ω–æ"')
    mark_payment_as_paid.short_description = 'üí≥ –ü–æ–∑–Ω–∞—á–∏—Ç–∏ –æ–ø–ª–∞—Ç—É —è–∫ —É—Å–ø—ñ—à–Ω—É'
    
    def export_selected(self, request, queryset):
        from django.core.management import call_command
        call_command('export_orders')
        self.message_user(request, '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ')
    export_selected.short_description = '–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤ JSON'
    
    def get_queryset(self, request):
        qs = super().get_queryset(request)
        return qs.select_related('user').prefetch_related('items__product', 'items__variant')


@admin.register(OrderItem)
class OrderItemAdmin(admin.ModelAdmin):
    list_display = ('order', 'product', 'variant', 'quantity', 'retail_price', 'line_total')
    list_filter = ('order__status', 'order__created_at')
    search_fields = ('order__order_number', 'product__name', 'variant__sku')
    readonly_fields = ('line_total',)


@admin.register(PaymentTransaction)
class PaymentTransactionAdmin(admin.ModelAdmin):
    list_display = ('id', 'order_link', 'transaction_type', 'status_display', 
                    'amount', 'payment_system', 'created_at', 'completed_at')
    list_filter = ('transaction_type', 'status', 'payment_system', 'created_at')
    search_fields = ('order__order_number', 'external_id', 'order__full_name')
    readonly_fields = ('created_at', 'updated_at', 'completed_at', 'request_data', 'response_data')
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('order', 'transaction_type', 'status', 'amount', 'currency')
        }),
        ('–ü–ª–∞—Ç—ñ–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞', {
            'fields': ('payment_system', 'external_id')
        }),
        ('–î–µ—Ç–∞–ª—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó', {
            'fields': ('request_data', 'response_data', 'error_message'),
            'classes': ('collapse',)
        }),
        ('–ß–∞—Å–æ–≤—ñ –º—ñ—Ç–∫–∏', {
            'fields': ('created_at', 'updated_at', 'completed_at'),
            'classes': ('collapse',)
        }),
    )
    
    def order_link(self, obj):
        from django.urls import reverse
        from django.utils.html import format_html
        url = reverse('admin:orders_order_change', args=[obj.order.id])
        return format_html('<a href="{}">#{}</a>', url, obj.order.order_number or obj.order.id)
    order_link.short_description = '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è'
    
    def status_display(self, obj):
        status_icons = {
            'initiated': 'üîµ',
            'processing': 'üü°',
            'success': 'üü¢',
            'failed': 'üî¥',
            'cancelled': '‚ö´',
        }
        icon = status_icons.get(obj.status, '‚ö™')
        return f"{icon} {obj.get_status_display()}"
    status_display.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def get_queryset(self, request):
        qs = super().get_queryset(request)
        return qs.select_related('order')
