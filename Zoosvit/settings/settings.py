"""
Django settings for Zoosvit project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from decouple import config

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")
DEBUG = config("DEBUG", default=False, cast=bool)
API_KEY = config("API_KEY", default="stub")


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Zoosvit',
    'apps.products',
    'apps.users',
    'apps.orders',
    'apps.favourites',
    'apps.cart',
    'apps.ts_ftps',
]

TS_SYNC = {
    "MODE": os.getenv("TS_MODE", "ftps"),     # ftps | ftp | local
    "FTP": {
        "HOST": os.getenv("TS_FTP_HOST", ""),
        "PORT": int(os.getenv("TS_FTP_PORT", "21")),
        "USER": os.getenv("TS_FTP_USER", ""),
        "PASS": os.getenv("TS_FTP_PASS", ""),
        "INCOMING_DIR": os.getenv("TS_FTP_INCOMING_DIR", "/incoming"),
        "PASSIVE": os.getenv("TS_FTP_PASSIVE", "true").lower() in ("1","true","yes"),
        "TIMEOUT": int(os.getenv("TS_FTP_TIMEOUT", "60")),
        "IMPLICIT_TLS": os.getenv("TS_FTPS_IMPLICIT", "false").lower() in ("1","true","yes"),  # для порту 990
    },
    "LOCAL": {
        "INCOMING_DIR": os.getenv("TS_LOCAL_INCOMING_DIR", "C:/incoming"),
    },
    "FILE": {
        "ENCODING": os.getenv("TS_TRS_ENCODING", "utf-8"),
        "DELIMITER": os.getenv("TS_TRS_DELIMITER", "auto"),
        "NAME": os.getenv("TS_FILE_NAME", "TSGoods.trs"),
    },

    # модель продукту: можна підставити свою, напр. "products.Product"
    "PRODUCT_MODEL": os.getenv("TS_PRODUCT_MODEL", "products.Product"),
    "INBOUND_TOKEN": os.getenv("TS_INBOUND_TOKEN", "change_me"),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Zoosvit.urls'

AUTH_USER_MODEL = 'users.CustomUser'
LOGIN_REDIRECT_URL  = 'home'
LOGOUT_REDIRECT_URL = 'home'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [

                'apps.favourites.context_processors.fav_counter',
                'apps.orders.context_processors.cart_summary',
                'apps.users.context_processors.auth_forms',

                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Zoosvit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # НОВА дефолтна БД (Postgres)
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('PG_NAME', 'laska_db'),
        'USER': os.getenv('PG_USER', 'danil'),
        'PASSWORD': os.getenv('PG_PASS', 'danilus15'),
        'HOST': os.getenv('PG_HOST', '127.0.0.1'),
        'PORT': os.getenv('PG_PORT', '5432'),
        'CONN_MAX_AGE': 60,  # простий keep-alive

        # 'OPTIONS': {
        #     # приклад: увімкнути ssl, якщо треба
        #     # 'sslmode': 'require',
        # }
    },

    # СТАРА SQLite (лише для зчитування даних під час міграції)
    # 'sqlite': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# де фізично лежатимуть завантажені файли
MEDIA_ROOT = BASE_DIR / 'media/'

# публічний префікс для доступу до них
MEDIA_URL = '/media/'

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
